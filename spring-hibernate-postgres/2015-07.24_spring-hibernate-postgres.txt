
2015-09.07 : ClassNotFoundException: springframework.DispatcherServlet
java.lang.ClassNotFoundException: org.springframework.web.servlet.DispatcherServlet

http://stackoverflow.com/questions/11227395/java-lang-classnotfoundexception-org-springframework-web-servlet-dispatcherserv

Sep 08, 2015 10:08:53 PM org.apache.catalina.core.ApplicationContext log
SEVERE: Error loading WebappClassLoader
  context: /spring-hibernate-postgres
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
org.apache.catalina.loader.StandardClassLoader@1ddc4ec2
 org.springframework.web.servlet.DispatcherServlet
java.lang.ClassNotFoundException: org.springframework.web.servlet.DispatcherServlet
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1680)
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1526)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1128)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:1026)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4421)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4734)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.core.StandardService.start(StandardService.java:525)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:754)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:595)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)


You need to add the "Maven Dependency" in the Deployement Assembly

right click on your project and choose properties.
click on Deployement Assembly.
click add
click on "Java Build Path Entries"
select Maven Dependencies"
click Finish.
That it!! rebuild and deploy again

~ ~ ~ 
months.jsp: 
<a href="${pageContext.request.contextPath}/days/${object[1]}">
javax.servlet.jsp.PageContext cannot be resolved to a type
http://stackoverflow.com/questions/8669387/javax-servlet-jsp-pagecontext-cannot-be-resolved-to-a-type

~ ~ ~ 

http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope
compile
	This is the default scope, used if none is specified. Compile dependencies are available in all classpaths of a project. Furthermore, those dependencies are propagated to dependent projects.
provided
	This is much like compile, but indicates you expect the JDK or a container to provide the dependency at runtime. For example, when building a web application for the Java Enterprise Edition, you would set the dependency on the Servlet API and related Java EE APIs to scope provided because the web container provides those classes. This scope is only available on the compilation and test classpath, and is not transitive.
runtime
	This scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath.
	
====================================================

2015-09.07 : List<Object[]> OrderDAOImpl.listCountMonthSum()

   webapp/WEB-INF/pages/months.jsp

   select count(*) , max(extract( month from data_c)) as luna ,
                  	sum(valoare) from comenzi_v_ext
					where extract( year from data_c) = 2015 
					group by extract( month from data_c)
					order by luna
   


2015-09.04 : List<Object[]> OrderDAOImpl.listCountDaySum()
			 String hql = "select count(*) , dataC , sum(valoare) from ComenziVExt where extract(year from dataC)=2015 group by dataC order by dataC";
			 Query query = getCurrentSession().createQuery(hql);
			 return query.list();
		// select count(*) , data_c , sum(valoare) from comenzi_v_ext where extract( month from data_c)=8 and extract( year from data_c)=2015 
		// group by data_c order by data_c desc				

     // www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example
     // Using GROUP BY clause in HQL is similar to SQL. The following query summarizes price of all products grouped by each category:
     // select sum(p.price), p.category.name from Product p group by category
String hql = "select sum(p.price), p.category.name from Product p group by category";
Query query = session.createQuery(hql);
List<Object[]> listResult = query.list();
for (Object[] aRow : listResult) {
    Double sum = (Double) aRow[0];
    String category = (String) aRow[1];
    System.out.println(category + " - " + sum);
}

2015-09.01 : OrderDAOImpl.getCountOfOrdersOnLastDay(Date dateOfLastOrder)

         valueOfLastOrders = orderService.getSumOfOrdersValuesOnLastDay(dateOfLastOrder);
		 String countOfLastOrders = orderService.getCountOfOrdersOnLastDay(dateOfLastOrder) ;


2015-08.28 : dateOfLastOrder = orderService.getDateOfLastOrder()  
 ToDo Next : SUMA pe total valoric comenzi !

FTW
test.jl-soft.ro
orders.jl-soft.ro/java-postgres
linux.jl-soft.ro/java
eurobit.pangram.ro/orders

====================================================

ROKYA - KYW   ROKYW - RoQ SALES ! ( JALIN ? jalix )  

2015-08.27 : OrderController - orderService.getClientHqNameByCui() 

Am reusit sa afisez numele complet pentru TERT + PL in lista comenzilor din ultima zi !  

OrderDAOImpl.java : 

	public String getClientHqNameByCui(String cui) {
		String theHqName = new String(" ");
		// CMS =2  : tert incorect sau inactiv ?  
		Query query = getCurrentSession().createQuery("from Terti where cui= :cui and plt='00' and cms<>2");
		query.setParameter("cui", cui);
		// List<Terti> list = query.list();
		try {
			Terti oneTert = (Terti) query.uniqueResult();
			theHqName = oneTert.getDenumire(); 
		} 
		catch (NoResultException e) {
			 return null;
		}	
		catch(NonUniqueResultException e) {
	        throw new RuntimeException("Two Terti found with same cui ");
	    }
		
		return theHqName;
	}



Why you should never use getSingleResult() in JPA
http://sysout.be/2011/03/09/why-you-should-never-use-getsingleresult-in-jpa/

List results = query.getResultList();
Entity foundEntity = null;
if(!results.isEmpty()){
    // ignores multiple results
    foundEntity = results.get(0);
}


2015-08.26 : OrderDTO dto = new OrderDTO();

2015-08.25 : CreditCards-krams915 + ContactManager-viralpatel


2015-08.21 23..59 : DATA TRANSFER OBJECT , FORGET SELF-JOIN_TERTI

2015-08.21 21..47 : Hibernate logging - SLF4j + Log4j

   ToDo Next : DATA TRANSFER OBJECT , FORGET SELF-JOIN_TERTI !
               http://krams915.blogspot.ro/2011/03/spring-hibernate-many-to-one.html
			         spring-hibernate-one-to-many-CreditCards-krams915
			   	
   ToDo Next : Hibernate @Filter and @FilterJoinTable Annotation Example
               http://www.concretepage.com/hibernate/hibernate-filter-and-filterjointable-annotation-example
 

~ Avand in vedere ca sunt probleme cu hibernate in self-join Terti , LOG detaliat : 
  http://www.mkyong.com/hibernate/how-to-display-hibernate-sql-parameter-values-log4j/
  http://www.mkyong.com/hibernate/how-to-configure-log4j-in-hibernate-project/
  http://www.mkyong.com/hibernate/how-to-display-hibernate-sql-parameter-values-solution/
  http://stackoverflow.com/questions/2536829/hibernate-show-real-sql
     -- log4j.logger.org.hibernate.SQL=DEBUG -- 

how to perform union clause query with hibernate criteria api
http://iswwwup.com/t/7d0b24a7e22e/how-to-perform-union-clause-query-with-hibernate-criteria-api.html

http://w3facility.org/question/hibernate-union-alternatives/

http://viralpatel.net/blogs/hibernate-self-join-annotations-one-to-many-mapping/



2015-08.21 21..47 : Found shared references to a collection - Terti.cuisipuncte
org.hibernate.HibernateException: Found shared references to a collection: org.jlsoft.orders.connection.model.Terti.cuisipuncte
https://forum.hibernate.org/viewtopic.php?t=958439&highlight=&
<<
It is fine to pass a persistent collection around to lots of places, sharing the use of a single instance. 
If you're doing that, continue doing it and all will be well. The problem occurs when you don't do that: 
when you have two distinct and separate references to a single collection. 
The most common way of getting into that situation is when you create a transient collection in transient object, 
then persist it and load it. The loaded collection is now the "real" collection, and the original collection should be immediately discarded. 
If you re-save that original object or collection you'll get the "shared reference" exception. 

There is no way to allow two different java collections refer to a single persistent collection. 
There is no way for hibernate to synchronize something like that: what if you remove one item from one collection, 
and add a different item to the other collection, then save both.. what happens? If you want two references to the same collection, 
that's fine, the only problem is when you have two different java collections referring to the same set of DB rows. 

	If the collection is truly read-only, then either map it as mutable="false", or at least detach it from the session. 
	The easiest way to detach the collection is to Hibernate.initialize it, then session.evict or session.clear.
>>

2015-08.20 23..59 forEach items

		<c:forEach items="${order.terti.cuisipuncte.toArray()}" var="plt">
		The function toArray must be used with a prefix when a default namespace is not specified

<c:if  test="${plt.denumire}=='00'}">
</c:if>



2015-08.19 22..34 : KO - TERTi-self-join 

http://kruders.com/hibernate/hibernate-self-join-one-to-many-using-annotation/
http://viralpatel.net/blogs/hibernate-self-join-annotations-one-to-many-mapping/
http://kruders.com/hibernate/hibernate-self-join-many-to-many-mapping/
http://viralpatel.net/blogs/hibernate-self-join-annotation-mapping-many-to-many-example/

NU merge self-join in TERTI dupa CUI deoarece in pangram_main_2008 
   - terti.cui nu este primary-key ... ci tert_id !  

ASA ar fi trebuit sa arate tabela terti pentru self-join : 
CREATE TABLE terti
(
  	cui character(14), NOT NULL DEFAULT fpliid('terti'::text, 7),
  	denumire character(90)
	CONSTRAINT terti_cui_pky PRIMARY KEY (cui),
	CONSTRAINT cui FOREIGN KEY (cui) REFERENCES terti (cui) MATCH FULL
}  
 
	 

2015-08.18 23..59 : ComenziVExt @ManyToOne(fetch = FetchType.EAGER) 

Am afisat in OrdersViewer : AgentName ! inlocuind "FetchType.LAZY" cu "FetchType.EAGER" ... 
apoi am putut sa folosesc  ${order.numereLucru.denumire} fara sa am eroarea "LazyInitializationException" ;   

@ManyToOne(fetch = FetchType.LAZY) ==>>     	
<< org.hibernate.LazyInitializationException: could not initialize proxy - no Session
                         at org.hibernate.proxy.AbstractLazyInitializer.initialize >> 

<td> ${order.numereLucru.denumire}... </td> 

	// Lazy fetching decides whether to load child objects while loading the Parent Object. 
	// Lazy = true (means not to load child) ; By default the lazy loading of the child objects is true.

Spring CRUD Example using One to One Mapping of Two Tables
http://www.dineshonjava.com/2013/05/spring-crud-example-using-one-to-one.html

JPA Mapping two Tables in one Class
http://uaihebert.com/jpa-mapping-two-tables-in-one-class/
http://uaihebert.com/jpa-mini-book-first-steps-and-detailed-concepts/11/

JPA @OneToOne Unidirectional and Bidirectional
http://uaihebert.com/jpa-onetoone-unidirectional-and-bidirectional/
http://uaihebert.com/jpa-mini-book-first-steps-and-detailed-concepts/19/

How to test your JPQL / HQL without a Deploy
http://uaihebert.com/how-to-test-your-jpqlhql-without-a-deploy/


====================================================

2015-08.13 23..20 : comenzi_v_ext terti vterti - detalii  
   In tabela comenzi_v_ext se introduce despre client doar tert_id , ceea ce presupune doar aflarea denumirii PLT-ului .  

 terti.cms=2 inseamna tert gresit-neutilizabil-inactiv-sters  ? 
   ~ a se vedea cazul cu REWE / REWEE (tert_id='010029125') ; 
              ( select * from terti where cms=2 : multi au denumirea terminata cu "gresit") 
              
Cand afisez o comanda plecand de la comenzi_v_ext, 
ca sa apara mai usor denumirea clientului (PLT=00) cat si denumirea punctului de lucru (in caz ca PLT>00), 
parca ar fi fost mai interesant ca in (comenzi_v_ext) comanda trimisa din tableta sa ajunga si CUI-ul pe langa tert_id , 
si astfel s-ar fi lucrat doar cu tabela "terti" fara sa se apeleze la "vterti"  ... 


"TABLE comenzi_v_ext CONSTRAINT tert_id FOREIGN KEY (tert_id) REFERENCES terti (tert_id)" 
In Java , recomandarea e sa se faca obiecte dupa tabele , nu dupa vederi ; 
Asadar , o prima idee ar fi SQL de genul : 

   1.  select t1.cui from terti t1 where tert_id='010029125'
   2.  select denumire ,tert_id, cui,plt, localitate, judet from terti where plt='00' 
            and cui= ( select t1.cui from terti t1 where tert_id='010029125' ) 

   ~ primul SELECT afla CUI-u` aferent unui tert_id dat , 
      iar in cel de-al 2-lea SELECT pe baza de CUI si conditia PLT=00 se afla denumirea aferenta sediului (PLT=00)  . 

select * from comenzi_v_ext where data_c='2015-08-12' order by valoare desc

ToDo Next : 
1. Pentru mapare OneToOne : Employee -> Address ( ComenziVExt -> Denumire-Client+Agent ) 
Hibernate Query Language (HQL) Example Tutorial
http://www.journaldev.com/2954/hibernate-query-language-hql-example-tutorial

2.
Spring ORM example with JPA, Hibernate, Transactions
http://www.journaldev.com/7655/spring-orm-example-with-jpa-hibernate-transactions

====================================================

2015-08.12 23:03 createQuery("from ComenziVExt where dataC= :dateOfLastOrder)
   FIRST SPRiNG DEBUG ! Project -> Debug As -> Debug on Server ... 
   org.jlsoft.orders.connection.dao.OrderDAOImpl.listOrders() 

====================================================

2015-08.11 23:55 = KO : No Hibernate Session bound to thread

SEVERE: Servlet.service() for servlet mvc-dispatcher threw exception
org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at org.springframework.orm.hibernate3.SpringSessionContext.currentSession(SpringSessionContext.java:63)
	at org.hibernate.impl.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:687)
	at org.jlsoft.orders.connection.dao.OrderDAOImpl.listOrders(OrderDAOImpl.java:20)
	at org.jlsoft.orders.connection.service.OrderServiceImpl.listOrders(OrderServiceImpl.java:22)
	at org.jlsoft.orders.connection.controller.OrderController.listOrders(OrderController.java:22)

Solutia : 
   Am mutat configurarile Spring MVC si Hibernate intr-un singur fisier : "persistence-dispatcher-servlet.xml" 

====================================================

2015-08.09 23:59 : select max(data_c) from comenzi_v_ext  
                   select * from comenzi_v_ext where data_c=(select max(data_c) from comenzi_v_ext)

2015-08.09 : SpringMVC3 Hibernate CRUD Sample Application
   http://www.sivalabs.in/2011/04/springmvc3-hibernate-crud-sample.html
      
2015-08.08 : Spring MVC + JQuery = KO !?
Ajax with Spring MVC 3 using Annotations and JQuery
http://www.raistudies.com/spring/spring-mvc/ajax-spring-mvc-3-annonations-jquery/
SpringMVCHibernate - github/jtelmon/ajax-jQuery-SpringMVC3

http://localhost:8080/spring-hibernate-postgres/index2.jsp
Aug 09, 2015 4:18:37 PM org.springframework.web.servlet.DispatcherServlet noHandlerFound
WARNING: No mapping found for HTTP request with URI [/spring-hibernate-postgres/js/jquery.js] 
in DispatcherServlet with name 'mvc-dispatcher'

====================================================

2015-08.07 23:49 : mvc-dispatcher-servlet.xml 

 *   http://localhost:8080/spring-hibernate-postgres/hello.htm
 *   ||=> Hello World from HelloController !

 *    http://localhost:8080/spring-hibernate-postgres/hello?name=Alex
 *    ||=> Hello World
 *    ||=> Welcome to Spring MVC! Alex

http://localhost:8080/spring-hibernate-postgres/index1.jsp
http://localhost:8080/spring-hibernate-postgres/index.jsp

ToDo NexT : in index2.jsp sa afisez data si ora la care s-a luat ultima comanda !
            pe sablon ContactManager afisez comenzile din ultima zi cu posibilitatea
            ca oricare dintre ele sa poata fi vizualizata ; 
            Daca se poate folosi sablon HTML din ASKi !!! 
            Spring Security : user = java / pass=linux 
             
http://viralpatel.net/blogs/spring3-mvc-hibernate-maven-tutorial-eclipse-example/
            
====================================================
2015-08.06 21:24 : HibernateConfigurationTest -> testFindOrderByID()
    @Test
    public void testFindOrderByID() {
    	BigDecimal orderValue = new BigDecimal(874);
    	String iD = new String("0100896075");
    	Session session = sessionFactory.openSession();
    	ComenziVExt theOrder = (ComenziVExt) session.get(ComenziVExt.class, iD);
    	session.close();
    	assertNotNull (theOrder);
    	assertEquals(orderValue, theOrder.getValoare().setScale(0));
    }
//	select * from comenzi_v_ext where data_c='2015-08-04'
//	com_id = "0100896075" + data_c="2015-08-04" + valoare=874
====================================================

2015-08.05 23:21 : VehicleTest.java
			package com.blogpost.maven.maven_spring;
			           
2015-08.05 : maven-spring-context-quickstart
             http://programmaticponderings.wordpress.com/2013/10/21/spring-integration-with-eclipse-using-maven/

Spring Integration with Eclipse Using Maven

Gary A. Stafford
Lead Developer
Paychex, Inc.
Rochester, New York Area

====================================================

2015-07.28 : HibernateConfigurationTest.java = OK ! 
org.jlsoft.orders.connection.model.HibernateConfigurationTest

Hibernate - ERROR & SOLUTION :   
org.hibernate.AnnotationException: Collection has neither generic type or OneToMany.targetEntity()
http://www.mkyong.com/hibernate/org-hibernate-annotationexception-collection-has-neither-generic-type-or-onetomany-targetentity/


How to create a Web Application Project with Maven
http://www.mkyong.com/maven/how-to-create-a-web-application-project-with-maven/

How to generate Hibernate mapping files & annotation with Hibernate Tools
http://www.mkyong.com/hibernate/how-to-generate-code-with-hibernate-tools/


Spring MVC HelloWorld Using Maven in Eclipse
http://www.programcreek.com/2014/02/spring-mvc-helloworld-using-maven-in-eclipse/
Step 1: Create a Maven Project
Step 2: Configure Spring
Step 3: Create Spring Controller and View
Step 4: Run on Server
