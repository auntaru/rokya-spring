
2015-08.15 : HQL-example-journaldev + viralpatel + websystique 

 * http://www.journaldev.com/2954/hibernate-query-language-hql-example-tutorial
 * Hibernate Query Language (HQL) Example Tutorial
 * 
 * 
 * http://websystique.com/hibernate/hibernate-one-to-one-unidirectional-with-foreign-key-associations-annotation-example/
 * Hibernate One-To-One Unidirectional with Foreign Key Associations (Annotation)
 * 
 * http://websystique.com/hibernate/hibernate-one-to-one-bidirectional-with-shared-primary-key-annotation-example/
 * Hibernate One-To-One Bidirectional with Shared Primary Key (Annotation)
 * 
 * 
 * http://viralpatel.net/blogs/hibernate-many-to-many-annotation-mapping-tutorial/
 * Hibernate Many To Many Annotation Mapping Tutorial
 * 
 * http://viralpatel.net/blogs/hibernate-one-to-many-annotation-tutorial/
 * Hibernate One To Many Annotation tutorial
 * 
 * http://websystique.com/hibernate/hibernate-many-to-one-unidirectional-annotation-example/
 * Hibernate Many-To-One Unidirectional (Annotation)
 * 
 * 
 * https://docs.jboss.org/hibernate/orm/3.6/reference/en-US/html/collections.html
 * Hibernate Reference Documentation ; Chapter 7. Collection mapping
 * 
 * 
 * http://what-when-how.com/hibernate/advanced-entity-association-mappings-hibernate/
 * Advanced entity association mappings (Hibernate)
 * 
 * 
 * SQL , FOREIGN KEY Constraint = A FOREIGN KEY in one table points to a PRIMARY KEY in another table. 
 * http://www.w3schools.com/sql/sql_foreignkey.asp
 * 
 * A foreign key is a field (or collection of fields) in one table that uniquely identifies a row of another table
 * https://en.wikipedia.org/wiki/Foreign_key
 
 http://www.codejava.net/frameworks/hibernate/hibernate-one-to-many-association-on-join-table-annotations-example
 http://www.mkyong.com/hibernate/how-to-generate-code-with-hibernate-tools/
 
 
 RUN : = > 
 
 Hibernate: select employee0_.emp_id as emp_id1_1_, employee0_.emp_name as emp_name2_1_, employee0_.emp_salary as emp_sala3_1_ from Employee employee0_
Hibernate: select address0_.emp_id as emp_id1_0_0_, address0_.address_line1 as address_2_0_0_, address0_.city as city3_0_0_, address0_.zipcode as zipcode4_0_0_, employee1_.emp_id as emp_id1_1_1_, employee1_.emp_name as emp_name2_1_1_, employee1_.emp_salary as emp_sala3_1_1_ from Address address0_ left outer join Employee employee1_ on address0_.emp_id=employee1_.emp_id where address0_.emp_id=?
Hibernate: select address0_.emp_id as emp_id1_0_0_, address0_.address_line1 as address_2_0_0_, address0_.city as city3_0_0_, address0_.zipcode as zipcode4_0_0_, employee1_.emp_id as emp_id1_1_1_, employee1_.emp_name as emp_name2_1_1_, employee1_.emp_salary as emp_sala3_1_1_ from Address address0_ left outer join Employee employee1_ on address0_.emp_id=employee1_.emp_id where address0_.emp_id=?
Hibernate: select address0_.emp_id as emp_id1_0_0_, address0_.address_line1 as address_2_0_0_, address0_.city as city3_0_0_, address0_.zipcode as zipcode4_0_0_, employee1_.emp_id as emp_id1_1_1_, employee1_.emp_name as emp_name2_1_1_, employee1_.emp_salary as emp_sala3_1_1_ from Address address0_ left outer join Employee employee1_ on address0_.emp_id=employee1_.emp_id where address0_.emp_id=?
Hibernate: select address0_.emp_id as emp_id1_0_0_, address0_.address_line1 as address_2_0_0_, address0_.city as city3_0_0_, address0_.zipcode as zipcode4_0_0_, employee1_.emp_id as emp_id1_1_1_, employee1_.emp_name as emp_name2_1_1_, employee1_.emp_salary as emp_sala3_1_1_ from Address address0_ left outer join Employee employee1_ on address0_.emp_id=employee1_.emp_id where address0_.emp_id=?
List of Employees::1,San Jose
List of Employees::2,Santa Clara
List of Employees::3,Bangalore
List of Employees::4,New Delhi
Hibernate: select employee0_.emp_id as emp_id1_1_, employee0_.emp_name as emp_name2_1_, employee0_.emp_salary as emp_sala3_1_ from Employee employee0_ where employee0_.emp_id=?
Employee Name=Lisa, City=Bangalore
Hibernate: update Employee set emp_name=? where emp_id=?
Employee Update Status=1
Hibernate: delete from Address where emp_id=?
Address Delete Status=1
Hibernate: delete from Employee where emp_id=?
Employee Delete Status=1
Hibernate: select sum(employee0_.emp_salary) as col_0_0_ from Employee employee0_
Sum of all Salaries= 600.0
Hibernate: select employee0_.emp_name as col_0_0_, address1_.city as col_1_0_ from Employee employee0_ inner join Address address1_ on employee0_.emp_id=address1_.emp_id
[Pankaj Kumar, San Jose]
[David, Santa Clara]
[Lisa, Bangalore]


